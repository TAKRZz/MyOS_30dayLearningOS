     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 	EXTERN	_keyfifo
    10 00000000                                 	EXTERN	_fifo8_init
    11 00000000                                 	EXTERN	_mousefifo
    12 00000000                                 	EXTERN	_io_out8
    13 00000000                                 	EXTERN	_init_keyboard
    14 00000000                                 	EXTERN	_enable_mouse
    15 00000000                                 	EXTERN	_init_palette
    16 00000000                                 	EXTERN	_init_screen8
    17 00000000                                 	EXTERN	_init_mouse_cursor8
    18 00000000                                 	EXTERN	_putblock8_8
    19 00000000                                 	EXTERN	_sprintf
    20 00000000                                 	EXTERN	_putfonts8_asc
    21 00000000                                 	EXTERN	_io_cli
    22 00000000                                 	EXTERN	_fifo8_status
    23 00000000                                 	EXTERN	_fifo8_get
    24 00000000                                 	EXTERN	_mouse_decode
    25 00000000                                 	EXTERN	_boxfill8
    26 00000000                                 	EXTERN	_io_stihlt
    27 00000000                                 	EXTERN	_io_load_eflags
    28 00000000                                 	EXTERN	_io_store_eflags
    29 00000000                                 	EXTERN	_memtest_sub
    30 00000000                                 	EXTERN	_load_cr0
    31 00000000                                 	EXTERN	_store_cr0
    32 00000000                                 [FILE "bootpack.c"]
    33                                          [SECTION .data]
    34 00000000                                 LC0:
    35 00000000 28 25 33 64 2C 20 25 33 64 29   	DB	"(%3d, %3d)",0x00
       0000000A 00 
    36 0000000B                                 LC1:
    37 0000000B 6D 65 6D 6F 72 79 20 25 64 4D   	DB	"memory %dMB",0x00
       00000015 42 00 
    38 00000017                                 LC2:
    39 00000017 48 65 6C 6C 6F 2C 20 54 41 4B   	DB	"Hello, TAKR! ",0x00
       00000021 52 21 20 00 
    40 00000025                                 LC4:
    41 00000025 5B 6C 63 72 20 25 34 64 20 25   	DB	"[lcr %4d %4d]",0x00
       0000002F 34 64 5D 00 
    42 00000033                                 LC3:
    43 00000033 25 30 32 58 00                  	DB	"%02X",0x00
    44                                          [SECTION .text]
    45 00000000                                 	GLOBAL	_HariMain
    46 00000000                                 _HariMain:
    47 00000000 55                              	PUSH	EBP
    48 00000001 89 E5                           	MOV	EBP,ESP
    49 00000003 57                              	PUSH	EDI
    50 00000004 56                              	PUSH	ESI
    51 00000005 53                              	PUSH	EBX
    52 00000006 BB 00000002                     	MOV	EBX,2
    53 0000000B 81 EC 000001E4                  	SUB	ESP,484
    54 00000011 E8 [00000000]                   	CALL	_init_gdtidt
    55 00000016 E8 [00000000]                   	CALL	_init_pic
    56 0000001B E8 [00000000]                   	CALL	_io_sti
    57 00000020 8D 85 FFFFFEA4                  	LEA	EAX,DWORD [-348+EBP]
    58 00000026 50                              	PUSH	EAX
    59 00000027 6A 20                           	PUSH	32
    60 00000029 68 [00000000]                   	PUSH	_keyfifo
    61 0000002E E8 [00000000]                   	CALL	_fifo8_init
    62 00000033 8D 85 FFFFFE24                  	LEA	EAX,DWORD [-476+EBP]
    63 00000039 50                              	PUSH	EAX
    64 0000003A 68 00000080                     	PUSH	128
    65 0000003F 68 [00000000]                   	PUSH	_mousefifo
    66 00000044 E8 [00000000]                   	CALL	_fifo8_init
    67 00000049 68 000000F9                     	PUSH	249
    68 0000004E 6A 21                           	PUSH	33
    69 00000050 E8 [00000000]                   	CALL	_io_out8
    70 00000055 83 C4 20                        	ADD	ESP,32
    71 00000058 68 000000EF                     	PUSH	239
    72 0000005D 68 000000A1                     	PUSH	161
    73 00000062 E8 [00000000]                   	CALL	_io_out8
    74 00000067 E8 [00000000]                   	CALL	_init_keyboard
    75 0000006C 8D 85 FFFFFE14                  	LEA	EAX,DWORD [-492+EBP]
    76 00000072 50                              	PUSH	EAX
    77 00000073 E8 [00000000]                   	CALL	_enable_mouse
    78 00000078 E8 [00000000]                   	CALL	_init_palette
    79 0000007D 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
    80 00000084 50                              	PUSH	EAX
    81 00000085 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    82 0000008C 50                              	PUSH	EAX
    83 0000008D FF 35 00000FF8                  	PUSH	DWORD [4088]
    84 00000093 E8 [00000000]                   	CALL	_init_screen8
    85 00000098 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    86 0000009F 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
    87 000000A2 89 C8                           	MOV	EAX,ECX
    88 000000A4 99                              	CDQ
    89 000000A5 F7 FB                           	IDIV	EBX
    90 000000A7 89 C7                           	MOV	EDI,EAX
    91 000000A9 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
    92 000000B0 6A 0E                           	PUSH	14
    93 000000B2 8D 48 D4                        	LEA	ECX,DWORD [-44+EAX]
    94 000000B5 89 C8                           	MOV	EAX,ECX
    95 000000B7 99                              	CDQ
    96 000000B8 F7 FB                           	IDIV	EBX
    97 000000BA 8D 9D FFFFFEC4                  	LEA	EBX,DWORD [-316+EBP]
    98 000000C0 89 C6                           	MOV	ESI,EAX
    99 000000C2 53                              	PUSH	EBX
   100 000000C3 E8 [00000000]                   	CALL	_init_mouse_cursor8
   101 000000C8 83 C4 20                        	ADD	ESP,32
   102 000000CB 6A 10                           	PUSH	16
   103 000000CD 53                              	PUSH	EBX
   104 000000CE 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   105 000000D1 56                              	PUSH	ESI
   106 000000D2 57                              	PUSH	EDI
   107 000000D3 6A 10                           	PUSH	16
   108 000000D5 6A 10                           	PUSH	16
   109 000000D7 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   110 000000DE 50                              	PUSH	EAX
   111 000000DF FF 35 00000FF8                  	PUSH	DWORD [4088]
   112 000000E5 E8 [00000000]                   	CALL	_putblock8_8
   113 000000EA 83 C4 20                        	ADD	ESP,32
   114 000000ED 56                              	PUSH	ESI
   115 000000EE 57                              	PUSH	EDI
   116 000000EF 68 [00000000]                   	PUSH	LC0
   117 000000F4 53                              	PUSH	EBX
   118 000000F5 E8 [00000000]                   	CALL	_sprintf
   119 000000FA 53                              	PUSH	EBX
   120 000000FB 6A 07                           	PUSH	7
   121 000000FD 6A 00                           	PUSH	0
   122 000000FF 6A 00                           	PUSH	0
   123 00000101 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   124 00000108 50                              	PUSH	EAX
   125 00000109 FF 35 00000FF8                  	PUSH	DWORD [4088]
   126 0000010F E8 [00000000]                   	CALL	_putfonts8_asc
   127 00000114 83 C4 28                        	ADD	ESP,40
   128 00000117 68 BFFFFFFF                     	PUSH	-1073741825
   129 0000011C 68 00400000                     	PUSH	4194304
   130 00000121 E8 0000026D                     	CALL	_memtest
   131 00000126 C1 E8 14                        	SHR	EAX,20
   132 00000129 50                              	PUSH	EAX
   133 0000012A 68 [0000000B]                   	PUSH	LC1
   134 0000012F 53                              	PUSH	EBX
   135 00000130 E8 [00000000]                   	CALL	_sprintf
   136 00000135 53                              	PUSH	EBX
   137 00000136 6A 07                           	PUSH	7
   138 00000138 6A 20                           	PUSH	32
   139 0000013A 6A 00                           	PUSH	0
   140 0000013C 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   141 00000143 50                              	PUSH	EAX
   142 00000144 FF 35 00000FF8                  	PUSH	DWORD [4088]
   143 0000014A E8 [00000000]                   	CALL	_putfonts8_asc
   144 0000014F 83 C4 2C                        	ADD	ESP,44
   145 00000152 68 [00000017]                   	PUSH	LC2
   146 00000157 6A 07                           	PUSH	7
   147 00000159 6A 30                           	PUSH	48
   148 0000015B                                 L18:
   149 0000015B 6A 00                           	PUSH	0
   150 0000015D 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   151 00000164 50                              	PUSH	EAX
   152 00000165 FF 35 00000FF8                  	PUSH	DWORD [4088]
   153 0000016B E8 [00000000]                   	CALL	_putfonts8_asc
   154 00000170 83 C4 18                        	ADD	ESP,24
   155 00000173                                 L2:
   156 00000173 E8 [00000000]                   	CALL	_io_cli
   157 00000178 68 [00000000]                   	PUSH	_keyfifo
   158 0000017D E8 [00000000]                   	CALL	_fifo8_status
   159 00000182 68 [00000000]                   	PUSH	_mousefifo
   160 00000187 89 C3                           	MOV	EBX,EAX
   161 00000189 E8 [00000000]                   	CALL	_fifo8_status
   162 0000018E 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   163 00000191 5B                              	POP	EBX
   164 00000192 5A                              	POP	EDX
   165 00000193 85 C0                           	TEST	EAX,EAX
   166 00000195 0F 84 000001EE                  	JE	L19
   167 0000019B 68 [00000000]                   	PUSH	_keyfifo
   168 000001A0 E8 [00000000]                   	CALL	_fifo8_status
   169 000001A5 59                              	POP	ECX
   170 000001A6 85 C0                           	TEST	EAX,EAX
   171 000001A8 0F 85 00000191                  	JNE	L20
   172 000001AE 68 [00000000]                   	PUSH	_mousefifo
   173 000001B3 E8 [00000000]                   	CALL	_fifo8_status
   174 000001B8 5A                              	POP	EDX
   175 000001B9 85 C0                           	TEST	EAX,EAX
   176 000001BB 74 B6                           	JE	L2
   177 000001BD 68 [00000000]                   	PUSH	_mousefifo
   178 000001C2 E8 [00000000]                   	CALL	_fifo8_get
   179 000001C7 89 C3                           	MOV	EBX,EAX
   180 000001C9 E8 [00000000]                   	CALL	_io_sti
   181 000001CE 0F B6 C3                        	MOVZX	EAX,BL
   182 000001D1 50                              	PUSH	EAX
   183 000001D2 8D 85 FFFFFE14                  	LEA	EAX,DWORD [-492+EBP]
   184 000001D8 50                              	PUSH	EAX
   185 000001D9 E8 [00000000]                   	CALL	_mouse_decode
   186 000001DE 83 C4 0C                        	ADD	ESP,12
   187 000001E1 85 C0                           	TEST	EAX,EAX
   188 000001E3 74 8E                           	JE	L2
   189 000001E5 FF B5 FFFFFE1C                  	PUSH	DWORD [-484+EBP]
   190 000001EB FF B5 FFFFFE18                  	PUSH	DWORD [-488+EBP]
   191 000001F1 68 [00000025]                   	PUSH	LC4
   192 000001F6 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   193 000001F9 53                              	PUSH	EBX
   194 000001FA E8 [00000000]                   	CALL	_sprintf
   195 000001FF 83 C4 10                        	ADD	ESP,16
   196 00000202 8B 85 FFFFFE20                  	MOV	EAX,DWORD [-480+EBP]
   197 00000208 A9 00000001                     	TEST	EAX,1
   198 0000020D 74 04                           	JE	L11
   199 0000020F C6 45 C5 4C                     	MOV	BYTE [-59+EBP],76
   200 00000213                                 L11:
   201 00000213 A9 00000002                     	TEST	EAX,2
   202 00000218 74 04                           	JE	L12
   203 0000021A C6 45 C7 52                     	MOV	BYTE [-57+EBP],82
   204 0000021E                                 L12:
   205 0000021E 83 E0 04                        	AND	EAX,4
   206 00000221 74 04                           	JE	L13
   207 00000223 C6 45 C6 43                     	MOV	BYTE [-58+EBP],67
   208 00000227                                 L13:
   209 00000227 6A 1F                           	PUSH	31
   210 00000229 68 00000097                     	PUSH	151
   211 0000022E 6A 10                           	PUSH	16
   212 00000230 6A 20                           	PUSH	32
   213 00000232 6A 0E                           	PUSH	14
   214 00000234 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   215 0000023B 50                              	PUSH	EAX
   216 0000023C FF 35 00000FF8                  	PUSH	DWORD [4088]
   217 00000242 E8 [00000000]                   	CALL	_boxfill8
   218 00000247 53                              	PUSH	EBX
   219 00000248 6A 07                           	PUSH	7
   220 0000024A 6A 10                           	PUSH	16
   221 0000024C 6A 20                           	PUSH	32
   222 0000024E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   223 00000255 50                              	PUSH	EAX
   224 00000256 FF 35 00000FF8                  	PUSH	DWORD [4088]
   225 0000025C E8 [00000000]                   	CALL	_putfonts8_asc
   226 00000261 8D 46 0F                        	LEA	EAX,DWORD [15+ESI]
   227 00000264 83 C4 34                        	ADD	ESP,52
   228 00000267 50                              	PUSH	EAX
   229 00000268 8D 47 0F                        	LEA	EAX,DWORD [15+EDI]
   230 0000026B 50                              	PUSH	EAX
   231 0000026C 56                              	PUSH	ESI
   232 0000026D 57                              	PUSH	EDI
   233 0000026E 6A 0E                           	PUSH	14
   234 00000270 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   235 00000277 50                              	PUSH	EAX
   236 00000278 FF 35 00000FF8                  	PUSH	DWORD [4088]
   237 0000027E E8 [00000000]                   	CALL	_boxfill8
   238 00000283 83 C4 1C                        	ADD	ESP,28
   239 00000286 03 B5 FFFFFE1C                  	ADD	ESI,DWORD [-484+EBP]
   240 0000028C 03 BD FFFFFE18                  	ADD	EDI,DWORD [-488+EBP]
   241 00000292 0F 88 000000A0                  	JS	L21
   242 00000298                                 L14:
   243 00000298 85 F6                           	TEST	ESI,ESI
   244 0000029A 0F 88 00000091                  	JS	L22
   245 000002A0                                 L15:
   246 000002A0 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   247 000002A7 83 E8 10                        	SUB	EAX,16
   248 000002AA 39 C7                           	CMP	EDI,EAX
   249 000002AC 7E 02                           	JLE	L16
   250 000002AE 89 C7                           	MOV	EDI,EAX
   251 000002B0                                 L16:
   252 000002B0 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   253 000002B7 83 E8 10                        	SUB	EAX,16
   254 000002BA 39 C6                           	CMP	ESI,EAX
   255 000002BC 7E 02                           	JLE	L17
   256 000002BE 89 C6                           	MOV	ESI,EAX
   257 000002C0                                 L17:
   258 000002C0 56                              	PUSH	ESI
   259 000002C1 57                              	PUSH	EDI
   260 000002C2 68 [00000000]                   	PUSH	LC0
   261 000002C7 53                              	PUSH	EBX
   262 000002C8 E8 [00000000]                   	CALL	_sprintf
   263 000002CD 6A 0F                           	PUSH	15
   264 000002CF 6A 4F                           	PUSH	79
   265 000002D1 6A 00                           	PUSH	0
   266 000002D3 6A 00                           	PUSH	0
   267 000002D5 6A 0E                           	PUSH	14
   268 000002D7 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   269 000002DE 50                              	PUSH	EAX
   270 000002DF FF 35 00000FF8                  	PUSH	DWORD [4088]
   271 000002E5 E8 [00000000]                   	CALL	_boxfill8
   272 000002EA 83 C4 2C                        	ADD	ESP,44
   273 000002ED 53                              	PUSH	EBX
   274 000002EE 6A 07                           	PUSH	7
   275 000002F0 6A 00                           	PUSH	0
   276 000002F2 6A 00                           	PUSH	0
   277 000002F4 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   278 000002FB 50                              	PUSH	EAX
   279 000002FC FF 35 00000FF8                  	PUSH	DWORD [4088]
   280 00000302 E8 [00000000]                   	CALL	_putfonts8_asc
   281 00000307 8D 85 FFFFFEC4                  	LEA	EAX,DWORD [-316+EBP]
   282 0000030D 6A 10                           	PUSH	16
   283 0000030F 50                              	PUSH	EAX
   284 00000310 56                              	PUSH	ESI
   285 00000311 57                              	PUSH	EDI
   286 00000312 6A 10                           	PUSH	16
   287 00000314 6A 10                           	PUSH	16
   288 00000316 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   289 0000031D 50                              	PUSH	EAX
   290 0000031E FF 35 00000FF8                  	PUSH	DWORD [4088]
   291 00000324 E8 [00000000]                   	CALL	_putblock8_8
   292 00000329 83 C4 38                        	ADD	ESP,56
   293 0000032C E9 FFFFFE42                     	JMP	L2
   294 00000331                                 L22:
   295 00000331 31 F6                           	XOR	ESI,ESI
   296 00000333 E9 FFFFFF68                     	JMP	L15
   297 00000338                                 L21:
   298 00000338 31 FF                           	XOR	EDI,EDI
   299 0000033A E9 FFFFFF59                     	JMP	L14
   300 0000033F                                 L20:
   301 0000033F 68 [00000000]                   	PUSH	_keyfifo
   302 00000344 E8 [00000000]                   	CALL	_fifo8_get
   303 00000349 89 C3                           	MOV	EBX,EAX
   304 0000034B E8 [00000000]                   	CALL	_io_sti
   305 00000350 53                              	PUSH	EBX
   306 00000351 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   307 00000354 68 [00000033]                   	PUSH	LC3
   308 00000359 53                              	PUSH	EBX
   309 0000035A E8 [00000000]                   	CALL	_sprintf
   310 0000035F 6A 1F                           	PUSH	31
   311 00000361 6A 0F                           	PUSH	15
   312 00000363 6A 10                           	PUSH	16
   313 00000365 6A 00                           	PUSH	0
   314 00000367 6A 0E                           	PUSH	14
   315 00000369 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   316 00000370 50                              	PUSH	EAX
   317 00000371 FF 35 00000FF8                  	PUSH	DWORD [4088]
   318 00000377 E8 [00000000]                   	CALL	_boxfill8
   319 0000037C 83 C4 2C                        	ADD	ESP,44
   320 0000037F 53                              	PUSH	EBX
   321 00000380 6A 07                           	PUSH	7
   322 00000382 6A 10                           	PUSH	16
   323 00000384 E9 FFFFFDD2                     	JMP	L18
   324 00000389                                 L19:
   325 00000389 E8 [00000000]                   	CALL	_io_stihlt
   326 0000038E E9 FFFFFDE0                     	JMP	L2
   327 00000393                                 	GLOBAL	_memtest
   328 00000393                                 _memtest:
   329 00000393 55                              	PUSH	EBP
   330 00000394 89 E5                           	MOV	EBP,ESP
   331 00000396 56                              	PUSH	ESI
   332 00000397 53                              	PUSH	EBX
   333 00000398 31 F6                           	XOR	ESI,ESI
   334 0000039A E8 [00000000]                   	CALL	_io_load_eflags
   335 0000039F 0D 00040000                     	OR	EAX,262144
   336 000003A4 50                              	PUSH	EAX
   337 000003A5 E8 [00000000]                   	CALL	_io_store_eflags
   338 000003AA E8 [00000000]                   	CALL	_io_load_eflags
   339 000003AF 5A                              	POP	EDX
   340 000003B0 A9 00040000                     	TEST	EAX,262144
   341 000003B5 74 05                           	JE	L24
   342 000003B7 BE 00000001                     	MOV	ESI,1
   343 000003BC                                 L24:
   344 000003BC 25 FFFBFFFF                     	AND	EAX,-262145
   345 000003C1 50                              	PUSH	EAX
   346 000003C2 E8 [00000000]                   	CALL	_io_store_eflags
   347 000003C7 89 F0                           	MOV	EAX,ESI
   348 000003C9 5B                              	POP	EBX
   349 000003CA 84 C0                           	TEST	AL,AL
   350 000003CC 75 31                           	JNE	L27
   351 000003CE                                 L25:
   352 000003CE FF 75 0C                        	PUSH	DWORD [12+EBP]
   353 000003D1 FF 75 08                        	PUSH	DWORD [8+EBP]
   354 000003D4 E8 [00000000]                   	CALL	_memtest_sub
   355 000003D9 89 C3                           	MOV	EBX,EAX
   356 000003DB 58                              	POP	EAX
   357 000003DC 89 F0                           	MOV	EAX,ESI
   358 000003DE 5A                              	POP	EDX
   359 000003DF 84 C0                           	TEST	AL,AL
   360 000003E1 75 09                           	JNE	L28
   361 000003E3                                 L26:
   362 000003E3 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   363 000003E6 89 D8                           	MOV	EAX,EBX
   364 000003E8 5B                              	POP	EBX
   365 000003E9 5E                              	POP	ESI
   366 000003EA 5D                              	POP	EBP
   367 000003EB C3                              	RET
   368 000003EC                                 L28:
   369 000003EC E8 [00000000]                   	CALL	_load_cr0
   370 000003F1 25 9FFFFFFF                     	AND	EAX,-1610612737
   371 000003F6 50                              	PUSH	EAX
   372 000003F7 E8 [00000000]                   	CALL	_store_cr0
   373 000003FC 59                              	POP	ECX
   374 000003FD EB E4                           	JMP	L26
   375 000003FF                                 L27:
   376 000003FF E8 [00000000]                   	CALL	_load_cr0
   377 00000404 0D 60000000                     	OR	EAX,1610612736
   378 00000409 50                              	PUSH	EAX
   379 0000040A E8 [00000000]                   	CALL	_store_cr0
   380 0000040F 59                              	POP	ECX
   381 00000410 EB BC                           	JMP	L25
